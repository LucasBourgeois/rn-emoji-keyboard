"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[836],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=o.createContext({}),c=function(e){var t=o.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=c(e.components);return o.createElement(m.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,y=u["".concat(m,".").concat(d)]||u[d]||p[d]||a;return n?o.createElement(y,i(i({ref:t},l),{},{components:n})):o.createElement(y,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},78:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:11,title:"Custom Emojis Data"},i=void 0,s={unversionedId:"documentation/Examples/emojis-data",id:"documentation/Examples/emojis-data",title:"Custom Emojis Data",description:"To preview app with this example, clone github repo and run yarn example ios or yarn example android.",source:"@site/docs/documentation/Examples/emojis-data.md",sourceDirName:"documentation/Examples",slug:"/documentation/Examples/emojis-data",permalink:"/rn-emoji-keyboard/docs/documentation/Examples/emojis-data",draft:!1,editUrl:"https://github.com/TheWidlarzGroup/rn-emoji-keyboard/tree/master/docs/docs/documentation/Examples/emojis-data.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11,title:"Custom Emojis Data"},sidebar:"documentation",previous:{title:"Selected Emojis",permalink:"/rn-emoji-keyboard/docs/documentation/Examples/selected_emojis"},next:{title:"Custom Buttons",permalink:"/rn-emoji-keyboard/docs/documentation/Examples/custom-buttons"}},m={},c=[{value:"Usage",id:"usage",level:3}],l={toc:c};function p(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,o.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"To preview app with this example, clone ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/TheWidlarzGroup/rn-emoji-keyboard.git"},(0,r.kt)("strong",{parentName:"a"},"github repo"))," and run ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn example ios")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"yarn example android"),".")),(0,r.kt)("h3",{id:"usage"},"Usage"),(0,r.kt)("p",null,"It's possible to pass your own set of emojis. You have to keep in mind that types and category titles must match the ones that we are using. In the example you can see custom emojis set that contains only emojis with unicode version === 11."),(0,r.kt)("p",null,"Passing your set of emojis allows you to support translated keywords, names and custom emojis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"import EmojiPicker, { emojisByCategory } from 'rn-emoji-keyboard'\nimport { isUnicodeEmoji } from '../../../src/utils/parseEmoji'\nimport type { EmojisByCategory } from 'src/types'\nimport { Image } from 'react-native'\n\nconst getCustomEmojis = () => {\n  const newEmojiSet: EmojisByCategory[] = []\n\n  // Filter in categories, emojis version equal to unicode 11\n  for (const [, value] of Object.entries(emojisByCategory)) {\n    const newData = value.data.filter(\n      (emoji) => isUnicodeEmoji(emoji) && parseFloat(emoji.v) === 11,\n    )\n    newEmojiSet.push({\n      title: value.title,\n      data: newData,\n    })\n  }\n\n  // Add in custom category URI sourced emojis\n  // Can be either a distant https:// or a base64 formatted image or a resolved image asset\n  const customCategoryIndex = emojisByCategory.findIndex(({ title }) => title === 'custom')\n  newEmojiSet[customCategoryIndex]!.data = [\n    {\n      uri: Image.resolveAssetSource(require('example/assets/custom/shhhh.webp')).uri,\n      keywords: ['shhhh', 'face'],\n      name: 'shhhh',\n    },\n    {\n      uri: Image.resolveAssetSource(require('example/assets/custom/silly.webp')).uri,\n      keywords: ['silly', 'face'],\n      name: 'silly',\n    },\n    {\n      uri: Image.resolveAssetSource(require('example/assets/custom/woah.webp')).uri,\n      keywords: ['woaah', 'face'],\n      name: 'woaah',\n    },\n  ]\n  return newEmojiSet\n}\n\nconst ExampleComponent = () => {\n  // ...\n\n  return (\n    <EmojiPicker\n      open={isOpen}\n      onClose={handleOnClose}\n      onEmojiSelected={handleOnEmojiSelected}\n      emojisByCategory={getCustomEmojis()}\n    />\n  )\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Preview",src:n(1032).Z,width:"215",height:"400"})))}p.isMDXComponent=!0},1032:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/custom-emojis-data-efdb8a17f3a3562ff8a0bdc88265ac95.png"}}]);