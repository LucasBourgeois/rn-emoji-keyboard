"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[159],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,f=m["".concat(s,".").concat(d)]||m[d]||c[d]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6488:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2,title:"Development Workflow"},i="Development workflow",l={unversionedId:"contributions/workflow",id:"contributions/workflow",title:"Development Workflow",description:"To get started with the project, run yarn in the root directory to install the required dependencies.",source:"@site/docs/contributions/workflow.md",sourceDirName:"contributions",slug:"/contributions/workflow",permalink:"/rn-emoji-keyboard/docs/contributions/workflow",draft:!1,editUrl:"https://github.com/TheWidlarzGroup/rn-emoji-keyboard/tree/master/docs/docs/contributions/workflow.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Development Workflow"},sidebar:"contributions",previous:{title:"Translations",permalink:"/rn-emoji-keyboard/docs/contributions/translations"}},s={},p=[{value:"Commit message convention",id:"commit-message-convention",level:3},{value:"Sending a pull request",id:"sending-a-pull-request",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"development-workflow"},"Development workflow"),(0,o.kt)("p",null,"To get started with the project, run ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn")," in the root directory to install the required dependencies."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"The tooling has been built around ",(0,o.kt)("a",{parentName:"p",href:"https://classic.yarnpkg.com/"},(0,o.kt)("inlineCode",{parentName:"a"},"yarn")),", so you'll have an easier time if you use ",(0,o.kt)("inlineCode",{parentName:"p"},"yarn")," for development.")),(0,o.kt)("p",null,"While developing, you can run the example app in ",(0,o.kt)("inlineCode",{parentName:"p"},"/example/")," directory to test your changes. Any changes you make in your library's JavaScript code will be automatically reflected in the example app."),(0,o.kt)("p",null,"To run the example app run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn example ios\n")),(0,o.kt)("p",null,"or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn example android\n")),(0,o.kt)("p",null,"Make sure your code passes TypeScript and ESLint. Run the following to verify:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"yarn typescript\nyarn lint\n")),(0,o.kt)("h3",{id:"commit-message-convention"},"Commit message convention"),(0,o.kt)("p",null,"Please follow the ",(0,o.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en"},"conventional commits specification")," for commit messages:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"fix"),": bug fixes, e.g. fix crash due to deprecated method."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"feat"),": new features, e.g. add new method to the module."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"refactor"),": code refactor, e.g. migrate from class components to hooks."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"docs"),": changes into documentation, e.g. add usage example for the module."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"test"),": adding or updating tests, e.g. add integration tests using detox."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"chore"),": tooling changes, e.g. change CI config.")),(0,o.kt)("p",null,"The pre-commit hooks verify that your commit message matches this format when committing."),(0,o.kt)("h3",{id:"sending-a-pull-request"},"Sending a pull request"),(0,o.kt)("p",null,"When you're sending a pull request:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Prefer small pull requests focused on one change."),(0,o.kt)("li",{parentName:"ul"},"Verify that linters and tests are passing."),(0,o.kt)("li",{parentName:"ul"},"Review the documentation to make sure it looks good."),(0,o.kt)("li",{parentName:"ul"},"Follow the pull request template when opening a pull request."),(0,o.kt)("li",{parentName:"ul"},"For pull requests that change the API or implementation, please discuss with maintainers first by opening an issue.")))}c.isMDXComponent=!0}}]);