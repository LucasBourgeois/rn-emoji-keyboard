"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[452],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=i,y=d["".concat(c,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(y,a(a({ref:t},p),{},{components:n})):r.createElement(y,a({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9438:(e,t,n)=>{n.d(t,{Y:()=>i});var r=n(7294);const i=e=>{let{children:t}=e;return r.createElement(r.Fragment,null,r.createElement("span",{className:"TitleWithRequiredBadge__badge"},"Required"),r.createElement("span",null,t))}},6588:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var r=n(7462),i=(n(7294),n(3905)),o=n(9438);const a={sidebar_position:3,title:"useRecentPicksPersistence"},s=void 0,c={unversionedId:"api/useRecentPicksPersistence",id:"api/useRecentPicksPersistence",title:"useRecentPicksPersistence",description:"The library gives you the possibility to persists recent emoji picks by your own.",source:"@site/docs/api/useRecentPicksPersistence.md",sourceDirName:"api",slug:"/api/useRecentPicksPersistence",permalink:"/rn-emoji-keyboard/docs/api/useRecentPicksPersistence",draft:!1,editUrl:"https://github.com/TheWidlarzGroup/rn-emoji-keyboard/tree/master/docs/docs/api/useRecentPicksPersistence.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"useRecentPicksPersistence"},sidebar:"api",previous:{title:"Static Mode",permalink:"/rn-emoji-keyboard/docs/api/static"},next:{title:"Theme",permalink:"/rn-emoji-keyboard/docs/api/theme"}},l={},p=[{value:"Required",id:"required",level:2},{value:"<TitleWithRequiredBadge><code>initialization</code></TitleWithRequiredBadge>",id:"initialization",level:3},{value:"<TitleWithRequiredBadge><code>onStateChange</code></TitleWithRequiredBadge>",id:"onstatechange",level:3}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The library gives you the possibility to persists recent emoji picks by your own.\nThis mean that you can use for that reason whatever you want."),(0,i.kt)("p",null,"Async storage? - sure. Backend as store - no problem.\nChoose how you want to handle it, we only require a Promise"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useRecentPicksPersistence } from 'rn-emoji-keyboard'\n")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This functionality requires to enable ",(0,i.kt)("inlineCode",{parentName:"p"},"enableRecentlyUsed")," in your emoji keyboard component")),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"This hook will have impact on every rn-emoji-keyboard instance used in app that have enabled recent picks.")),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"To ensure smooth experience we recommend that you use it as high as possible in the React structure. eg. App.tsx file")),(0,i.kt)("h2",{id:"required"},"Required"),(0,i.kt)("h3",{id:"initialization"},(0,i.kt)(o.Y,{mdxType:"TitleWithRequiredBadge"},(0,i.kt)("inlineCode",{parentName:"h3"},"initialization"))),(0,i.kt)("p",null,"This property is used at the very beginning to restore previous state."),(0,i.kt)("h3",{id:"onstatechange"},(0,i.kt)(o.Y,{mdxType:"TitleWithRequiredBadge"},(0,i.kt)("inlineCode",{parentName:"h3"},"onStateChange"))),(0,i.kt)("p",null,"This property is used every time when user selects emoji and keyboard has enabled ",(0,i.kt)("inlineCode",{parentName:"p"},"enableRecentlyUsed")," props"))}d.isMDXComponent=!0}}]);